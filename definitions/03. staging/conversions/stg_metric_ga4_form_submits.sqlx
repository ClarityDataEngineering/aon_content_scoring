config {
    type: 'view',
    schema: project_config.OUTPUT_STAGING_DATASET, 
    description: 'Weekly GA4 form submit influences per page with 12-month rolling total, months live, monthly average, and traffic score. Uses enhanced scaffold for all page status logic.',
    bigquery: {
        labels: {
          table_name: "content_scoring_stg_metric_ga4_form_submit"
        }
    }
}

-- Get base form_submits that have included a insight pageview leading to a form submit event
with base_form_submits as (
    select
        date_trunc(event_date_dt, week(MONDAY)) as event_date_dt
        , page_location_clean
        , count(distinct(session_partition_key)) as form_submits
    from 
        ${ref('stg_ga4_insight_conversion_journey_prep')}
    where
        event_date_dt >= "${project_config.START_DATE}"
    group by 
        event_date_dt
        , page_location_clean
)

-- Join with weekly scaffold - 
, form_submits_live_pages as (
    select
        sc.event_date_dt
        , sc.page_location_clean
        , coalesce(bs.form_submits, 0) as form_submits
        , sc.first_seen_date
        , sc.months_live
    from 
        ${ref('stg_ga4_page_live_weekly_scaffold')} sc
    left join 
        base_form_submits bs
        using (event_date_dt, page_location_clean)
    where
        sc.is_page_live_week = true  -- Only include pages where the page is live in a given week
)

-- Calculate 12-month rolling sum
, rolling_12_month as (
    select
        event_date_dt
        , page_location_clean
        , first_seen_date
        , months_live
        , sum(form_submits) over (
            partition by page_location_clean 
            order by event_date_dt 
            rows between 51 preceding and current row
        ) as total_12_months
    from 
        form_submits_live_pages
)

-- Join the months live and calculate the monthly avg. Add filter to include rows only post first seen date
, calc_monthly_avg as (
    select
        event_date_dt
        , page_location_clean
        , total_12_months
        , months_live
        , first_seen_date
        -- Divide by months live, though if months live is greater than 12 then return 12
        , cast(round(safe_divide(total_12_months, least(months_live, 12))) as int64) as monthly_avg
    from 
        rolling_12_month
    where
        event_date_dt >= first_seen_date
)

-- Add percentage calculation
, with_percentages as (
    select
        event_date_dt
        , page_location_clean
        , total_12_months
        , months_live
        , first_seen_date
        , monthly_avg
        , sum(monthly_avg) over(partition by event_date_dt) as total_monthly_avg_for_week
        , round(safe_divide(monthly_avg, sum(monthly_avg) over(partition by event_date_dt)) * 100, 2) as monthly_avg_percentage
    from 
        calc_monthly_avg
)

-- Add case for clicks percentile scoring logic
select
    event_date_dt
    , page_location_clean
    , total_12_months
    , months_live
    , first_seen_date
    , monthly_avg
    , total_monthly_avg_for_week
    , monthly_avg_percentage
    , case
        when monthly_avg_percentage = 0 then 1
        when monthly_avg_percentage >= 2 then 5
        when monthly_avg_percentage >= 0.5 and monthly_avg_percentage < 2 then 4
        when monthly_avg_percentage >= 0.1 and monthly_avg_percentage < 0.5 then 3
        when monthly_avg_percentage > 0 and monthly_avg_percentage < 0.1 then 2
        else null
    end as score_ga4_form_submits
from 
    with_percentages 